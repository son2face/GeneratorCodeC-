using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using [NAMESPACE].Models;
using [NAMESPACE].[MODULEPREFIX]Admin.[MODULEPREFIX]Employee;
namespace [NAMESPACE].[MODULEPREFIX]Admin.[MODULEPREFIX][MODULE]
{
    public class [MODULE]Service : I[MODULE]Service
    {
        private readonly IEmployeeService EmployeeService;
        private readonly [ENTITY] [ENTITY];
        public [MODULE]Service(IEmployeeService EmployeeService, [ENTITY] [ENTITY])
        {
		    this.EmployeeService = EmployeeService;
            this.[ENTITY] = [ENTITY];
        }

        public List<[MODULE]Entity> Gets(EmployeeEntity EmployeeEntity,Search[MODULE]Entity Search[MODULE]Entity)
        {
            if (Search[MODULE]Entity == null)
            {
                Search[MODULE]Entity = new Search[MODULE]Entity();
            }
			var [MODULE]Models = [ENTITY].[MODULES]
			[ARRAYPROPERTIES]
			.Include(T => T.[ITEM.TYPES])
			[END]
			[OBJECTPROPERTIES]
			.Include(T => T.[ITEM.TYPE])
			[END]
			;
			var [MODULES] = Search[MODULE]Entity.ApplyTo([MODULE]Models);
             [MODULES] = Search[MODULE]Entity.SkipAndTake([MODULES]);
            return [MODULES].ToList().Select(P => new [MODULE]Entity(P
			[ARRAYPROPERTIES]
			,P.[ITEM.TYPES]
			[END]
			[OBJECTPROPERTIES]
			,P.[ITEM.TYPE]
			[END]
			)).ToList();
        }

        public [MODULE]Entity Get(EmployeeEntity EmployeeEntity,int [MODULE]Id)
        {
            var [MODULE] = [ENTITY].[MODULES]
			[ARRAYPROPERTIES]
			.Include(T => T.[ITEM.TYPES])
			[END]
			[OBJECTPROPERTIES]
			.Include(T => T.[ITEM.TYPE])
			[END]
			.FirstOrDefault(V => V.Id.Equals([MODULE]Id));
            if ([MODULE] == null)
                throw new BadRequestException("[MODULE] không tồn tại");
            return new [MODULE]Entity([MODULE]
			[ARRAYPROPERTIES]
			,[MODULE].[ITEM.TYPES]
			[END]
			[OBJECTPROPERTIES]
			,[MODULE].[ITEM.TYPE]
			[END]
			);
        }

        public [MODULE]Entity Create(EmployeeEntity EmployeeEntity,[MODULE]Entity [MODULE]Entity)
        {
		try
            {
			 //[MODULE]Entity.Id = Guid.NewGuid();
				var [MODULE] = [MODULE]Entity.ToModel();
				[ENTITY].[MODULES].Add([MODULE]);
				[ENTITY].SaveChanges();
                [MODULE]Entity = new [MODULE]Entity(P
					[ARRAYPROPERTIES]
					,P.[ITEM.TYPES]
					[END]
					[OBJECTPROPERTIES]
					,P.[ITEM.TYPE]
					[END]
				)
            }
            catch (Exception e)
            {
                throw new BadRequestException(e.Message);
            }
            return [MODULE]Entity;
        }

        public [MODULE]Entity Update(EmployeeEntity EmployeeEntity,int [MODULE]Id, [MODULE]Entity [MODULE]Entity)
        {
            var [MODULE] = [ENTITY].[MODULES].FirstOrDefault(V => V.Id.Equals([MODULE]Id));
            if ([MODULE] == null)
                throw new BadRequestException("[MODULE] không tồn tại");
            [MODULE]Entity.ToModel([MODULE]);
			[ARRAYPROPERTIES]
			if ([MODULE]Entity.[ITEM.TYPE]Entities != null)
            {
                [MODULE].[ITEM.TYPES].Clear();
                foreach (var [ITEM.TYPE]Entity in [MODULE]Entity.[ITEM.TYPE]Entities)
                {
                    var [ITEM.TYPE] = [ENTITY].[ITEM.TYPES].FirstOrDefault(T => T.Id == [ITEM.TYPE]Entity.Id);
                    if ([ITEM.TYPE] != null)
                    {
                        [MODULE].[ITEM.TYPES].Add([ITEM.TYPE]);
                    }
                }
            }
			[END]
			[OBJECTPROPERTIES]
			if ([MODULE]Entity.[ITEM.TYPE]Entity != null)
            {
                var [ITEM.TYPE] = [ENTITY].[ITEM.TYPES].FirstOrDefault(T => T.Id == [MODULE]Entity.[ITEM.TYPE]Entity.Id);
                if ([ITEM.TYPE] != null)
                {
                    [MODULE].[ITEM.TYPE] = [ITEM.TYPE];
                }
            }
			[END]
            [ENTITY].SaveChanges();
            return [MODULE]Entity;
        }

        public [MODULE]Entity Delete(EmployeeEntity EmployeeEntity,int [MODULE]Id)
        {
            var [MODULE] = [ENTITY].[MODULES].FirstOrDefault(V => V.Id.Equals([MODULE]Id));
            if ([MODULE] == null)
                throw new BadRequestException("[MODULE] không tồn tại");
			if ([MODULE].IsDeleted == true)
                throw new BadRequestException("[MODULE] đã được xóa!");
            [MODULE].IsDeleted = true;
            [ENTITY].SaveChanges();
			[MODULE]Entity = Get(EmployeeEntity, [MODULE]Id);
			return new [MODULE]Entity([MODULE]);
        }

        public int Count(EmployeeEntity EmployeeEntity,Search[MODULE]Entity Search[MODULE]Entity)
        {
            if (Search[MODULE]Entity == null)
            {
                Search[MODULE]Entity = new Search[MODULE]Entity();
            }
            return Search[MODULE]Entity.ApplyTo([ENTITY].[MODULES]).Count();
        }
    }
}